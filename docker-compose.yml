services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: photostore_mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: photostore
      MYSQL_USER: photostore_user
      MYSQL_PASSWORD: photostore_pass
      MYSQL_ROOT_HOST: "%"
    ports:
      - "3305:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - photostore_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Adminer - Database Management Tool
  adminer:
    image: adminer:latest
    container_name: photostore_adminer
    ports:
      - "8081:8080"
    networks:
      - photostore_network
    depends_on:
      - mysql

  # Keycloak - Identity and Access Management
  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    container_name: photostore_keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: mysql
      KC_DB_URL: jdbc:mysql://photostore_mysql:3306/keycloak?createDatabaseIfNotExist=true
      KC_DB_USERNAME: root
      KC_DB_PASSWORD: rootpassword
      KC_HOSTNAME: localhost
      KC_HOSTNAME_STRICT: false
      KC_HTTP_ENABLED: true
      KC_HEALTH_ENABLED: true
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 20s
      timeout: 20s
      retries: 90
    networks:
      - photostore_network
    depends_on:
      mysql:
        condition: service_healthy
    command:
      - start-dev

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: photostore_backend
    env_file:
      - ./backend/.env
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/docs"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 90s
    volumes:
      - ./backend:/app
      - ./backend/uploads:/app/uploads

    networks:
      - photostore_network
    depends_on:
      mysql:
        condition: service_healthy
      keycloak:
        condition: service_started
    restart: unless-stopped
  redis:
    image: redis:7
    container_name: photostore_redis
    ports:
      - "6379:6379"
    networks:
      - photostore_network
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=http://photostore_backend:8000
    environment:
      - VITE_KEYCLOAK_URL=http://photostore_keycloak:8080
      - VITE_KEYCLOAK_REALM=photostore_realm
      - VITE_KEYCLOAK_CLIENT=photostore_client
      - VITE_API_URL=http://photostore_backend:8000

    container_name: photostore_frontend
    ports:
      - "5173:80"
    depends_on:
      backend:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    networks:
      - photostore_network

networks:
  photostore_network:
    driver: bridge

volumes:
  mysql_data:
